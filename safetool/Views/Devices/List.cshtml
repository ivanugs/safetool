@model PaginatedList<safetool.Models.Device>

@{
    ViewData["Title"] = "Index";
}

<style>
    a {
        color: var(--var-color-secondary)
    }
        a:hover {
            color: var(--var-color-main)
        }
</style>

<div class="mb-4 d-flex gap-4 align-items-center">
    <a asp-controller="Admin" asp-action="Index">
        <img src="/images/icons/arrow-left-solid.png" alt="Arrow Icon" width="20" />
    </a>
    <h1 class="fs-5">Administración de equipos</h1>
</div>

<div class="mb-4 fs-6">
    <form asp-action="List" method="get">
        <div class="d-flex">
            <input class="form-control me-2 w-25" type="search" placeholder="Búsqueda" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <button type="submit" class="btn btn-custom">Buscar</button>
        </div>
    </form>
</div>

<p class="fs-6 mb-3">
    <a asp-action="Create">Agregar registro</a>
</p>

<table class="table table-hover fs-6">
    <thead>
        <tr>
            <th scope="col">
                #
            </th>
            <th scope="col">
                <a asp-action="List" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nombre del equipo</a>
            </th>
            <th scope="col">
                <a asp-action="List" asp-route-sortOrder="@ViewData["ModelSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Modelo del equipo</a>
            </th>
            <th scope="col">
                <a asp-action="List" asp-route-sortOrder="@ViewData["LocationSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Localidad</a>
            </th>
            <th scope="col">
                <a asp-action="List" asp-route-sortOrder="@ViewData["AreaSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Área</a>
            </th>
            <th scope="col">
                Último mantenimiento
            </th>
            <th scope="col">
                Activo?
            </th>
            <th scope="çol">
                Acciones
            </th>
        </tr>
    </thead>
    <tbody class="fs-6">
        @foreach (var item in Model)
        {
            <tr>
                <th scope="row">@Html.DisplayFor(modelItem => item.ID)</th>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Model)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Area.Location.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Area.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastMaintenance)
                </td>
                <td>
                    @Html.CheckBoxFor(modelItem => item.Active, new { @class = "form-check-input", @disabled = "disabled" })
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Editar</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Detalles</a> 
                </td>
            </tr>
        }
    </tbody>
</table>

@if (!Model.Any())
{
    <p class="text-center text-black fs-6 mb-4">No se encontraron equipos</p>
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

@if (ViewBag.TotalDevices > 15)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-custom @prevDisabled">
        Anterior
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-custom @nextDisabled">
        Siguiente
    </a>
}