@model PaginatedList<safetool.Models.Device>

@{
    ViewData["Title"] = "Equipos";
}

<div class="mb-4 d-flex gap-5 align-items-center">
    <a asp-controller="Home" asp-action="Index" class="">
        <img src="/images/icons/house_icon.png" alt="Home Icon" width="30"/>
    </a>
    <h1 class="fs-3">Listado de maquinarias y herramientas</h1>
</div>

<!-- Filtros de Localidad y Área -->
<form asp-action="Index" method="get" class="mb-4">
    <div class="row g-3">
        <div class="col-md-4">
            <label for="LocationID" class="form-label">Localidad:</label>
            <select id="locations" name="LocationID" class="form-select" asp-items="ViewBag.Locations">
                <option value="" disabled selected>Selecciona una localidad</option>
            </select>
        </div>
        <div class="col-md-4">
            <label for="AreaID" class="form-label">Área:</label>
            <select id="areas" name="AreaID" class="form-select">
                <option value="">Selecciona el área</option>
                <!-- Las áreas se llenarán dinámicamente basado en la localidad seleccionada -->
            </select>
        </div>
        <div class="col-md-2 d-flex align-items-end">
            <button type="submit" class="btn btn-primary">Filtrar</button>
        </div>
    </div>
</form>

@if (Model.Any())
{
    <div id="card__container" class="d-flex flex-row align-content-center justify-content-center gap-4 p-1 flex-wrap">
        @foreach (var device in Model)
        {
            <a style="text-decoration: none;" class="d-flex pe-auto text-light fs-4" asp-action="Details" asp-route-id="@device.ID">
                <div id="card" class="d-flex align-items-center px-3 rounded-pill shadow-sm justify-content-between">
                    <div style="width: 480px;" class="d-flex flex-column gap-1">
                        <div class="">
                            <h2 id="card__title" class="order-2 overflow-hidden text-truncate text-nowrap fw-bold text-dark">@device.Name</h2>
                        </div>
                        <div class="d-flex justify-content-between px-2">
                            @* <p class="fs-6">@device.Model</p> *@
                            <p class="fs-6">@device.Area.Location</p> <!-- Asumiendo que Location tiene la propiedad Name -->
                            <p class="fs-6">@device.Area.Name</p> <!-- Asumiendo que Area tiene la propiedad Name -->
                        </div>
                    </div>
                    <div class="d-flex justify-content-center align-items-center">
                        <img id="card__icon" class="order-1 img-fluid" src="~/images/icons/Continental_Pictogram_Arrow_left_sRGB.png" alt="Arrow Icon" width="20"/>
                    </div>
                </div>
            </a>
        }
    </div>
}
else
{
    <p class="text-warning fs-3">No se encontraron dispositivos.</p>
}


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-controller="Devices" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)" class="btn btn-primary @prevDisabled">Anterior</a>
<a asp-controller="Devices" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)" class="btn btn-primary @nextDisabled">Siguiente</a>

@section Scripts {
    <script>
        document.getElementById('locations').addEventListener('change', function () {
            var locationID = this.value;
            var areasSelect = document.getElementById('areas');

            // Limpiar las opciones anteriores
            areasSelect.innerHTML = '<option value="">Selecciona el área</option>';

            if (locationID) {
                fetch(`/Devices/GetAreasByLocation?locationId=${locationID}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(area => {
                            var option = document.createElement('option');
                            option.value = area.id;
                            option.text = area.name;
                            areasSelect.appendChild(option);
                        });
                    });
            }
        });
    </script>
}