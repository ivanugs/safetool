@model PaginatedList<safetool.Models.Device>

@{
    ViewData["Title"] = "Equipos";

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var registeredDevices = ViewBag.RegisteredDevices as List<int>;  // La lista de dispositivos registrados
}

<style>

    #card {
        box-sizing: border-box;
        background: var(--var-color-main);
        width: 400px;
        height: 65px;
    }

        #card:hover {
            background: var(--var-color-hover);
        }



</style>

<div class="mb-4 d-flex gap-5 align-items-center">
    <a asp-controller="Home" asp-action="Index" class="">
        <img src="/images/icons/house_icon.png" alt="Home Icon" width="30"/>
    </a>
    <h1 class="fs-3">Listado de maquinarias y herramientas</h1>
</div>

<!-- Filtros de Localidad y Área -->
<div class="d-flex justify-content-center align-items-center mb-5">
    <form asp-action="Index" method="get">
        <div class="d-flex flex-row gap-4 justify-content-between" style="width: 800px">
            <div class="" style="min-width:300px;">
                <label for="LocationID" class="form-label">Localidad:</label>
                <select id="locations" name="LocationID" class="form-select" asp-items="ViewBag.Locations">
                    <option value="" disabled selected>Selecciona una localidad</option>
                </select>
            </div>
            <div class="" style="min-width:300px;">
                <label for="AreaID" class="form-label">Área:</label>
                <select id="areas" name="AreaID" class="form-select">
                    <option value="">Selecciona el área</option>
                </select>
            </div>
            <div class="d-flex align-items-end">
                <button type="submit" class="btn btn-custom">Aplicar filtro</button>
            </div>
        </div>
    </form>
</div>

<div class="w-100 d-flex justify-content-center mb-5">
    <div style="width:980px;" class="d-flex flex-row align-content-center justify-content-center gap-4 p-1 flex-wrap">
        @if (Model.Any())
        {
            @foreach (var device in Model)
            {
                var isRegistered = registeredDevices != null && registeredDevices.Contains(device.ID); // Verificar si el dispositivo ya fue registrado

                <div id="card" class="d-flex align-items-center px-3 justify-content-between rounded-3">
                    <a style="text-decoration: none;" class="w-100 text-light d-flex flex-row gap-2" asp-action="Details" asp-route-id="@device.ID">
                        <div class="d-flex flex-column w-100 gap-1">
                            <div style="font-size:18px" class="overflow-hidden text-nowrap text-capitalize">
                                <p class="text-nowrap text-truncate">@device.Name</p>
                            </div>
                            <div style="font-weight:300; font-size:16px" class="d-flex align-items-center gap-5">
                                <p class="text-nowrap">@device.Model</p>
                                <p class="text-nowrap text-truncate">@device.Area.Name</p>
                                @if (isRegistered)
                                {
                                    <span class="text-success">✔️</span>
                                }
                            </div>
                        </div>
                    </a>
                </div>
            }
        }
        else
        {
            <p class="text-warning fs-5 mb-5">No se encontraron dispositivos.</p>
        }
    </div>
</div>

@if (Model.Any())
{
    <div class="d-flex w-100 justify-content-center gap-2">
        <a asp-controller="Devices" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)" class="btn btn-custom @prevDisabled">Anterior</a>
        <a asp-controller="Devices" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)" class="btn btn-custom @nextDisabled">Siguiente</a>
    </div>
}

@section Scripts {
    <script>
        document.getElementById('locations').addEventListener('change', function () {
            var locationID = this.value;
            var areasSelect = document.getElementById('areas');

            // Limpiar las opciones anteriores
            areasSelect.innerHTML = '<option value="">Selecciona el área</option>';

            if (locationID) {
                fetch(`/Devices/GetAreasByLocation?locationId=${locationID}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(area => {
                            var option = document.createElement('option');
                            option.value = area.id;
                            option.text = area.name;
                            areasSelect.appendChild(option);
                        });
                    });
            }
        });
    </script>
}