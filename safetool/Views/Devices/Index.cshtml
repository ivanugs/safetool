@model PaginatedList<safetool.Models.Device>

@{
    ViewData["Title"] = "Equipos";

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var registeredDevices = ViewBag.RegisteredDevices as List<int>;  // La lista de dispositivos registrados
}

<style>
    .card__device {
        transition: all 0.1s ease-in;
        box-sizing: border-box;
        width: 400px;
        height: 65px;
        cursor: pointer;
        background-color: white;
    }

    #register__check svg{
        width: 40px;
        height: 40px;
        color: green;
    }

    .card__name{
        font-size: 18px;
        color: var(--var-color-main);
    }
    
    .card__device a{
        text-decoration: none;
        color: #585858;
    }

    .card__device:hover {
        background: var(--var-color-main) !important;
    }

    .card__device:hover a{
        color: white !important;
    }

    .card__device:hover .card__name{
        color: white !important;
    }
</style>

<div class="mb-4 d-flex gap-5 align-items-center">
    <a asp-controller="Home" asp-action="Index" class="">
        <img src="/images/icons/house_icon.png" alt="Home Icon" width="30"/>
    </a>
    <h1 class="fs-3">Listado de maquinarias y herramientas</h1>
</div>

<!-- Filtros de Localidad y Área -->
<div class="d-flex justify-content-center align-items-center mb-5">
    <form asp-action="Index" method="get">
        <div class="d-flex flex-row gap-4 justify-content-between" style="width: 800px">
            <div class="" style="min-width:300px;">
                <label for="LocationID" class="form-label fs-5">Localidad:</label>
                <select id="locations" name="LocationID" class="form-select" asp-items="ViewBag.Locations">
                    <option value="" disabled selected>Selecciona una localidad</option>
                </select>
            </div>
            <div class="" style="min-width:300px;">
                <label for="AreaID" class="form-label fs-5">Área:</label>
                <select id="areas" name="AreaID" class="form-select">
                    <option value="">Selecciona el área</option>
                </select>
            </div>
            <div class="d-flex align-items-end">
                <button type="submit" class="btn btn-custom">Aplicar filtro</button>
            </div>
        </div>
    </form>
</div>

<div class="w-100 d-flex justify-content-center mb-5">
    <div style="width:980px;" class="d-flex flex-row align-content-center justify-content-center gap-5 p-1 flex-wrap">
        @if (Model.Any())
        {
            @foreach (var device in Model)
            {
                var isRegistered = registeredDevices != null && registeredDevices.Contains(device.ID); // Verificar si el dispositivo ya fue registrado
                @if (isRegistered)
                {
                    <div class="d-flex align-items-center px-3 justify-content-between rounded-3 card_success shadow-lg card__device">
                        <a class="w-100 d-flex flex-row gap-2" asp-action="Details" asp-route-id="@device.ID">
                            <div class="d-flex flex-row w-100 gap-2">
                                <div class="d-flex flex-column w-100 gap-1">
                                    <div class="overflow-hidden text-nowrap text-capitalize card__name">
                                        <p class="text-nowrap text-truncate">@device.Name</p>
                                    </div>
                                    <div style="font-weight:300; font-size:16px" class="d-flex align-items-center gap-5">
                                        <p class="text-nowrap">@device.Model</p>
                                        <p class="text-nowrap text-truncate">@device.Area.Name</p>
                                    </div>
                                </div>
                                <div id="register__check" class="d-flex justify-content-center align-items-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <path d="M8 12l2.5 2.5L16 9"></path>
                                    </svg>
                                </div>
                            </div>
                        </a>
                    </div>
                }
                else
                {
                    <div class="d-flex align-items-center px-3 justify-content-between rounded-3 card_success shadow-lg card__device">
                        <a class="w-100 d-flex flex-row gap-2" asp-action="Details" asp-route-id="@device.ID">
                            <div class="d-flex flex-column w-100 gap-1">
                                <div class="overflow-hidden text-nowrap text-capitalize card__name">
                                    <p class="text-nowrap text-truncate">@device.Name</p>
                                </div>
                                <div style="font-weight:300; font-size:16px" class="d-flex align-items-center gap-5">
                                    <p class="text-nowrap">@device.Model</p>
                                    <p class="text-nowrap text-truncate">@device.Area.Name</p>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            }
        }
        else
        {
            <p class="text-black fs-5 mb-4">No se encontraron dispositivos</p>
        }
    </div>
</div>

@if (ViewBag.TotalDevices > 10)
{
    <div class="d-flex w-100 justify-content-center gap-2">
        <a asp-controller="Devices" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)" class="btn btn-custom @prevDisabled">Anterior</a>
        <a asp-controller="Devices" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)" class="btn btn-custom @nextDisabled">Siguiente</a>
    </div>
}

@section Scripts {
    <script>
        document.getElementById('locations').addEventListener('change', function () {
            var locationID = this.value;
            var areasSelect = document.getElementById('areas');

            // Limpiar las opciones anteriores
            areasSelect.innerHTML = '<option value="">Selecciona el área</option>';

            if (locationID) {
                fetch(`/Devices/GetAreasByLocation?locationId=${locationID}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(area => {
                            var option = document.createElement('option');
                            option.value = area.id;
                            option.text = area.name;
                            areasSelect.appendChild(option);
                        });
                    });
            }
        });
    </script>
}